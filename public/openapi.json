{
  "openapi": "3.0.0",
  "info": {
    "title": "lolisafe",
    "version": "3.0.0"
  },
  "paths": {
    "/api/check": {
      "get": {
        "summary": "Get server's partial config",
        "description": "This only contains the necessary config to customize the homepage uploader's behavior.",
        "tags": [
          "General"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "private",
                    "enableUserAccounts",
                    "maxSize",
                    "chunkSize",
                    "fileIdentifierLength",
                    "stripTags"
                  ],
                  "properties": {
                    "private": {
                      "type": "boolean"
                    },
                    "enableUserAccounts": {
                      "type": "boolean"
                    },
                    "maxSize": {
                      "type": "string"
                    },
                    "chunkSize": {
                      "type": "object"
                    },
                    "fileIdentifierLength": {
                      "type": "object",
                      "properties": {
                        "min": {
                          "type": "number"
                        },
                        "max": {
                          "type": "number"
                        },
                        "default": {
                          "type": "number"
                        },
                        "force": {
                          "type": "boolean"
                        }
                      }
                    },
                    "stripTags": {
                      "oneOf": [
                        {
                          "type": "object"
                        },
                        {
                          "type": "boolean"
                        }
                      ]
                    },
                    "temporaryUploadAges": {
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    },
                    "defaultTemporaryUploadAge": {
                      "type": "number"
                    },
                    "version": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "summary": "Verify user credentials and get token",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsernamePassword"
              },
              "example": {
                "username": "",
                "password": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/AuthSuccessful"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "success": false,
                  "description": "Wrong credentials."
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/api/register": {
      "post": {
        "summary": "Register a user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsernamePassword"
              },
              "example": {
                "username": "",
                "password": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/AuthSuccessful"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "success": false,
                  "description": "Registration is currently disabled."
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/api/password/change": {
      "post": {
        "summary": "Change user's password",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "password"
                ],
                "properties": {
                  "password": {
                    "$ref": "#/components/schemas/Password"
                  }
                }
              },
              "example": {
                "password": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Success"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get users at page 1",
        "description": "Requires admin permission.",
        "tags": [
          "Users",
          "Administration"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsersResponse"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/api/users/{page}": {
      "get": {
        "summary": "Get users at page N",
        "description": "Requires admin permission. This allows negative value to navigate backwards.",
        "tags": [
          "Users",
          "Administration"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page",
            "schema": {
              "type": "number"
            },
            "required": true,
            "description": "Page of users to get."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsersResponse"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/api/users/create": {
      "post": {
        "summary": "Create a new user",
        "description": "Requires admin permission. If password is omitted, server will generate a random one.",
        "tags": [
          "Users",
          "Administration"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "group"
                ],
                "properties": {
                  "username": {
                    "$ref": "#/components/schemas/Username"
                  },
                  "password": {
                    "$ref": "#/components/schemas/Password"
                  },
                  "group": {
                    "$ref": "#/components/schemas/Usergroup"
                  }
                }
              },
              "example": {
                "username": "",
                "password": "",
                "group": "user"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "username",
                    "password",
                    "group"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "username": {
                      "$ref": "#/components/schemas/Username"
                    },
                    "password": {
                      "$ref": "#/components/schemas/Password"
                    },
                    "group": {
                      "$ref": "#/components/schemas/Usergroup"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/api/users/delete": {
      "post": {
        "summary": "Delete a user",
        "description": "Requires admin permission.",
        "tags": [
          "Users",
          "Administration"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/UserID"
                  },
                  "purge": {
                    "description": "Whether to purge the user's uploaded files as well.",
                    "type": "boolean"
                  }
                }
              },
              "example": {
                "id": 69420,
                "purge": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Success"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/api/users/disable": {
      "post": {
        "summary": "Disable a user",
        "description": "Requires admin permission.",
        "tags": [
          "Users",
          "Administration"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/UserID"
                  }
                }
              },
              "example": {
                "id": 69420
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "update"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "update": {
                      "type": "object",
                      "required": [
                        "enabled"
                      ],
                      "properties": {
                        "enabled": {
                          "description": "Whether user is enabled or not.",
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "update": {
                    "enabled": false
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/api/users/edit": {
      "post": {
        "summary": "Edit a user",
        "description": "Requires admin permission.",
        "tags": [
          "Users",
          "Administration"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/UserID"
                  },
                  "username": {
                    "$ref": "#/components/schemas/Username"
                  },
                  "group": {
                    "$ref": "#/components/schemas/Usergroup"
                  },
                  "enabled": {
                    "description": "Whether to enable or disable user.",
                    "type": "boolean"
                  },
                  "resetPassword": {
                    "description": "Whether to reset user's password with a randomly generated one.",
                    "type": "boolean"
                  }
                }
              },
              "example": {
                "id": 69420,
                "username": "",
                "group": "user",
                "enabled": true,
                "resetPassword": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "update"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "update": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "$ref": "#/components/schemas/Username"
                        },
                        "enabled": {
                          "description": "Whether user is enabled or not.",
                          "type": "boolean"
                        },
                        "permission": {
                          "description": "Numeric permission according to selected usergroup.",
                          "type": "number"
                        },
                        "password": {
                          "$ref": "#/components/schemas/Password"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Username": {
        "type": "string",
        "minLength": 4,
        "maxLength": 32
      },
      "Password": {
        "type": "string",
        "format": "password",
        "minLength": 6,
        "maxLength": 64
      },
      "Result": {
        "type": "object",
        "required": [
          "success"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "success",
          "description"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "code": {
            "description": "Helper error code. Currently very sparsely used.",
            "type": "number"
          }
        }
      },
      "UsernamePassword": {
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "$ref": "#/components/schemas/Username"
          },
          "password": {
            "$ref": "#/components/schemas/Password"
          }
        }
      },
      "UserID": {
        "description": "User's numerical ID in database.",
        "type": "number"
      },
      "User": {
        "type": "object",
        "required": [
          "id",
          "username",
          "enabled",
          "timestamp",
          "registration",
          "groups",
          "uploads",
          "usage"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UserID"
          },
          "username": {
            "$ref": "#/components/schemas/Username"
          },
          "enabled": {
            "description": "Whether user is enabled or not.",
            "type": "boolean",
            "nullable": true
          },
          "timestamp": {
            "description": "Timestamp of user's last token update.",
            "type": "number",
            "nullable": true
          },
          "registration": {
            "description": "Timestamp of user's registration date.",
            "type": "number",
            "nullable": true
          },
          "groups": {
            "description": "Usergroup(s) information.",
            "type": "object"
          },
          "uploads": {
            "description": "Amount of uploads associated to this user.",
            "type": "number"
          },
          "usage": {
            "description": "Amount of disk used by this user in bytes.",
            "type": "number"
          }
        }
      },
      "Usergroup": {
        "description": "Usergroup name.",
        "type": "string"
      }
    },
    "responses": {
      "Success": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Result"
            },
            "example": {
              "success": true
            }
          }
        }
      },
      "BadRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "success": false,
              "description": "Bad request."
            }
          }
        }
      },
      "Unauthorized": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "success": false,
              "description": "Invalid token.",
              "code": 10001
            }
          }
        }
      },
      "ServerError": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "success": false,
              "description": "An unexpected error occurred. Try again?"
            }
          }
        }
      },
      "AuthSuccessful": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "success",
                "token"
              ],
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "token": {
                  "description": "Token that can be used for user authentication in other API routes.",
                  "type": "string"
                }
              }
            },
            "example": {
              "success": true,
              "token": "YOUR_TOKEN_HERE"
            }
          }
        }
      },
      "UsersResponse": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "success",
                "users",
                "usersPerPage",
                "count"
              ],
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "users": {
                  "description": "Array of users.",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                },
                "usersPerPage": {
                  "description": "Users per page for pagination.",
                  "type": "number"
                },
                "count": {
                  "description": "Total users in database.",
                  "type": "number"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "token": {
        "type": "apiKey",
        "name": "token",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "General",
      "description": "General routes"
    },
    {
      "name": "Uploads",
      "description": "Uploads routes"
    },
    {
      "name": "Auth",
      "description": "Auth routes"
    },
    {
      "name": "Users",
      "description": "Users routes"
    },
    {
      "name": "Album",
      "description": "Albums routes"
    },
    {
      "name": "Moderation",
      "description": "Moderation routes"
    },
    {
      "name": "Administration",
      "description": "Administration routes"
    }
  ]
}
